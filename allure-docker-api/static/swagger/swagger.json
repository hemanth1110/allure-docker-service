{
   "openapi":"3.0.0",
   "info":{
      "description":"Interact with Allure Docker container",
      "version":"1.0.0",
      "title":"Allure Docker Service API",
      "contact":{
         "email":"fescobar.systems@gmail.com"
      },
      "license":{
         "name":"MIT",
         "url":"https://opensource.org/licenses/MIT"
      }
   },
   "servers":[
      {
         "url":"/allure-docker-service"
      }
   ],
   "tags":[
      {
         "name":"Info",
         "description":""
      },
      {
         "name":"Action",
         "description":""
      },
      {
         "name":"Project",
         "description":""
      }
   ],
   "paths":{
      "/version":{
         "get":{
            "tags":[
               "Info"
            ],
            "summary":"Get Allure version (from version 2.12.1)",
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/swagger":{
         "get":{
            "tags":[
               "Info"
            ],
            "summary":"Get Swagger API Doc",
            "responses":{
               "200":{
                  "description":"OK"
               }
            }
         }
      },
      "/swagger.json":{
         "get":{
            "tags":[
               "Info"
            ],
            "summary":"Get Swagger API Specification",
            "responses":{
               "200":{
                  "description":"OK"
               }
            }
         }
      },
      "/config":{
         "get":{
            "tags":[
               "Action"
            ],
            "summary":"Get Allure config (from version 2.13.5)",
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/latest-report":{
         "get":{
            "tags":[
               "Action"
            ],
            "summary":"Get latest report (from version 2.13.3)",
            "parameters":[
               {
                  "in":"query",
                  "name":"project_id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/send-results":{
         "post":{
            "tags":[
               "Action"
            ],
            "summary":"Send results files (from version 2.12.1) with optional custom directory support",
            "description":"Send results files to allure. Optionally specify custom_results_dir and lens_version to route results to a custom path format: /app/DMaas/allure-results/{platform}/{product}-{major.minor}.x-results/{full_version}. The platform and product info are extracted from project_id (e.g., windows-ld-v-2-4-x, windows-lr-v-1-14-x).",
            "consumes":[
               "application/json",
               "multipart/form-data"
            ],
            "parameters":[
               {
                  "in":"query",
                  "name":"project_id",
                  "schema":{
                     "type":"string"
                  },
                  "description":"Project identifier. For custom paths, use format: {platform}-{product}-v-{major}-{minor}-x (e.g., windows-ld-v-2-4-x, macos-lr-v-1-14-x)"
               },
               {
                  "in":"query",
                  "name":"force_project_creation",
                  "schema":{
                     "type":"string"
                  },
                  "value": "false"
               },
               {
                  "in":"query",
                  "name":"custom_results_dir",
                  "schema":{
                     "type":"boolean"
                  },
                  "description":"If true, send to the custom location. If not set or false, send to allure's default location",
                  "required":false
               },
               {
                  "in":"query",
                  "name":"lens_version",
                  "schema":{
                     "type":"string"
                  },
                  "description":"Full version string (e.g., 2.3.0.1234). Required when custom_results_dir is true",
                  "required":false
               }
            ],
            "requestBody":{
               "description":"Files to send",
               "required":"true",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/results"
                     },
                     "example":{
                        "results":[
                           {
                              "file_name":"example1",
                              "content_base64":"Y29udGVudCBleGFtcGxlMQ=="
                           },
                           {
                              "file_name":"example2",
                              "content_base64":"Y29udGVudCBleGFtcGxlMg=="
                           },
                           {
                              "file_name":"example3",
                              "content_base64":"Y29udGVudCBleGFtcGxlMw=="
                           }
                        ]
                     }
                  },
                  "multipart/form-data":{
                     "schema":{
                        "$ref":"#/components/schemas/files"
                     }
                  }
               }
            },
            "produces":[
               "application/json"
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/generate-report":{
         "get":{
            "tags":[
               "Action"
            ],
            "summary":"Generate new report",
            "parameters":[
               {
                  "in":"query",
                  "name":"project_id",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"execution_name",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"execution_from",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"execution_type",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/clean-results":{
         "get":{
            "tags":[
               "Action"
            ],
            "summary":"Clean Allure results (from version 2.12.1)",
            "parameters":[
               {
                  "in":"query",
                  "name":"project_id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/clean-history":{
         "get":{
            "tags":[
               "Action"
            ],
            "summary":"Clean Allure history & trends (from version 2.12.1)",
            "parameters":[
               {
                  "in":"query",
                  "name":"project_id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/emailable-report/render":{
         "get":{
            "tags":[
               "Action"
            ],
            "summary":"Render emailable Allure report (from version 2.12.1)",
            "parameters":[
               {
                  "in":"query",
                  "name":"project_id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/emailable-report/export":{
         "get":{
            "tags":[
               "Action"
            ],
            "summary":"Export emailable Allure report (from version 2.12.1)",
            "parameters":[
               {
                  "in":"query",
                  "name":"project_id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/report/export":{
         "get":{
            "tags":[
               "Action"
            ],
            "summary":"Export Allure report (from version 2.13.1)",
            "parameters":[
               {
                  "in":"query",
                  "name":"project_id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/projects":{
         "post":{
            "tags":[
               "Project"
            ],
            "summary":"Create a new project (from version 2.13.3)",
            "consumes":[
               "application/json"
            ],
            "requestBody":{
               "required":"true",
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/project"
                     },
                     "example":{
                        "id":"my-project-id"
                     }
                  }
               }
            },
            "produces":[
               "application/json"
            ],
            "responses":{
               "201":{
                  "description":"CREATED",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         },
         "get":{
            "tags":[
               "Project"
            ],
            "summary":"Get all projects (from version 2.13.3)",
            "produces":[
               "application/json"
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/projects/{id}":{
         "delete":{
            "tags":[
               "Project"
            ],
            "summary":"Delete an existent project (from version 2.13.3)",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "value":"my-project-id",
                  "schema":{
                     "type":"string"
                  },
                  "required":"true"
               }
            ],
            "produces":[
               "application/json"
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         },
         "get":{
            "tags":[
               "Project"
            ],
            "summary":"Get an existent project (from version 2.13.3)",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "value":"my-project-id",
                  "schema":{
                     "type":"string"
                  },
                  "required":"true"
               }
            ],
            "produces":[
               "application/json"
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/projects/{id}/reports/{path}":{
         "get":{
            "tags":[
               "Project"
            ],
            "summary":"Get reports (from version 2.13.3)",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "value":"my-project-id",
                  "schema":{
                     "type":"string"
                  },
                  "required":"true"
               },
               {
                  "in":"path",
                  "name":"path",
                  "value":"my-path",
                  "schema":{
                     "type":"string"
                  },
                  "required":"true"
               },
               {
                  "in":"query",
                  "name":"redirect",
                  "value":"false",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "produces":[
               "application/json"
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      },
      "/projects/search":{
         "get":{
            "tags":[
               "Project"
            ],
            "summary":"Search projects (from version 2.13.5)",
            "parameters":[
               {
                  "in":"query",
                  "name":"id",
                  "value":"my-project-id",
                  "schema":{
                     "type":"string"
                  },
                  "required":"true"
               }
            ],
            "produces":[
               "application/json"
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "400":{
                  "description":"BAD_REQUEST",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               },
               "404":{
                  "description":"NOT_FOUND",
                  "schema":{
                     "$ref":"#/components/schemas/response"
                  }
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "data":{
            "properties":{
               "xxx":{
                  "type":"object"
               }
            }
         },
         "meta_data":{
            "properties":{
               "message":{
                  "type":"string"
               }
            }
         },
         "response":{
            "type":"object",
            "properties":{
               "data":{
                  "type":"object",
                  "additionalProperties":{
                     "$ref":"#/components/schemas/data"
                  }
               },
               "meta_data":{
                  "type":"object",
                  "additionalProperties":{
                     "$ref":"#/components/schemas/meta_data"
                  }
               }
            }
         },
         "results":{
            "type":"object",
            "properties":{
               "results":{
                  "$ref":"#/components/schemas/result"
               }
            }
         },
         "result":{
            "type":"array",
            "items":{
               "type":"object",
               "properties":{
                  "file_name":{
                     "type":"string"
                  },
                  "content_base64":{
                     "type":"string"
                  }
               }
            }
         },
         "project":{
            "type":"object",
            "properties":{
               "id":{
                  "type":"string"
               }
            }
         },
         "files":{
            "type":"object",
            "properties":{
               "files[]":{
                  "type":"array",
                  "items":{
                     "type":"string",
                     "format":"binary"
                  }
               }
            }
         }
      }
   }
}